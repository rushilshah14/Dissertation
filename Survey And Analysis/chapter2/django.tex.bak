\documentclass[../main.tex]{subfiles}


\begin{document}
\raggedright
Django is a Python based web framework which allows clean and pragmatic design as well as rapid development. The framework is designed to enable the coders to code without worrying about the security of the code as it guides the coders through securing the vulnerabilities such as SQL injection, cross-site scripting, cross-site request forgery and clickjacking. Django also has a user authentication system which can be customised to allow a secure way for data to be transferred\cite{django}. 

\subsection{Django vs Laravel}
Django is a Python based framework as stated above but Laravel\cite{laravel} on the other hand is a PHP based web framework. Django follows the Model View Template similar to Ruby on Rails but Laravel follows Object Oriented Programming as well as the Model View Template. In terms of website security, Django takes it extremely seriously and helps developers avoid the common mistakes which lead to the website having vulnerabilities while Laravel also has a guide to avoid making such mistakes but it does not beat Django. \\
Django is naturally very fast as it uses Python which is known for its speed and processing. Djano beats Laravels speed in all; Plaintext, JSON and SQLite Fetch\cite{djangovslaravel}.

\begin{figure}[!htb]
        \center{\includegraphics[scale=0.7]
        {images/djangovslaravelspeeds.png}}
        \caption{\label{fig:my-label} Django vs Laravel Speeds 2016 - CabotSolutions\cite{djangovslaravel}}
      \end{figure}
      
      
\subsection{Django vs Ruby on Rails} 
Both are popular web frameworks, Django more than Ruby on Rails for professional developers. They are open-source which allows all code to be customised in any way. Ruby on Rails allows the use of gems which are designed by other users, these come in handy when programming personal or individual projects however with professional projects licensing is a good idea to allow the code to be usable in the future\cite{djangovsrails}. 

Based on JetBrains research\cite{pythonresearch2018}\cite{rubyresearch2018} we know that Python is a really popular language compared to Ruby and it is highly used for Data Analysis and Web Development among various other things while developers use a mixture Ruby Versions which makes future updates to the code harder.  \\[4mm]


\textbf{The table below shows the differences between Django and Ruby on Rails}

\bgroup
\def\arraystretch{1.2}%  1 is the default, change whatever you need
\begin{table}[ht!]
\begin{tabular}{|l|l|l|}
\hline
& Django                                                                                                                                           & Ruby on Rails                                                                                                     \\ \hline
Pros       
& \begin{tabular}[l]{@{}l@{}}- Python is versatile \\ - Fast\\ - Caching System\\ - Data Analysis\\ - Great Security and \\ Autentication\end{tabular} 
& \begin{tabular}[l]{@{}l@{}}- Flexible\\ - Large Community\\ - Gems Available\\ - Easy Migration\end{tabular}      \\ \hline
Cons       
& \begin{tabular}[l]{@{}l@{}}- Hard to debug\\ - Monolithic architecture\end{tabular}                                                                   & \begin{tabular}[l]{@{}l@{}}- Bloated\\ - No Data Analysis\\ - Very explicit and \\ inelegant to read\end{tabular} \\ \hline
Started By 
& \begin{tabular}[l]{@{}l@{}}- Django-Started in 2003 by Adrian \\ Holovaty and Simon Willison\end{tabular}                                           
& \begin{tabular}[l]{@{}l@{}}- Ruby on Rails-Started in 2005 \\ by David Heinemeier Hansson\end{tabular}              \\ \hline
\end{tabular}
\captionof{table}{Django vs Ruby on Rails Pros and Cons \cite{djangovsrails}}\label{tab:title} 
\end{table}
\egroup

\subsection{Summary}
Django, compared to various other web frameworks has 

\end{document}
